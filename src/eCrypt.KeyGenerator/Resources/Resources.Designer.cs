//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eVision.eCrypt.KeyGenerator.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("eVision.eCrypt.KeyGenerator.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool will help you to create an encryption key pair (a public and private key) that is used for secure package deliveries. Only the private key can decrypt the package, it should therefore be stored in a secure location and should not be shared with anybody, including eVision Industry Software itself. This is a one-time action, which is why you should save the key pair and use it for all future deliveries.
        ///
        ///Please generate the keys once and send only the public key to the support team of eVision Indu [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ActionStep_Description {
            get {
                return ResourceManager.GetString("ActionStep_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create self-extratable decrypted package.
        /// </summary>
        public static string ActionStep_Encrypt {
            get {
                return ResourceManager.GetString("ActionStep_Encrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate keys.
        /// </summary>
        public static string ActionStep_Generate {
            get {
                return ResourceManager.GetString("ActionStep_Generate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to eVision Key Generator.
        /// </summary>
        public static string ActionStep_Title {
            get {
                return ResourceManager.GetString("ActionStep_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package will be encrypted using public PGP key and saved to destination directory as seft-extracted executable file.
        /// </summary>
        public static string EncryptionStep_Description {
            get {
                return ResourceManager.GetString("EncryptionStep_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination directory.
        /// </summary>
        public static string EncryptionStep_Destination {
            get {
                return ResourceManager.GetString("EncryptionStep_Destination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package file path.
        /// </summary>
        public static string EncryptionStep_PackagePath {
            get {
                return ResourceManager.GetString("EncryptionStep_PackagePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public key file path.
        /// </summary>
        public static string EncryptionStep_PublicKeyPath {
            get {
                return ResourceManager.GetString("EncryptionStep_PublicKeyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creation of encrypted sef-extracted package.
        /// </summary>
        public static string EncryptionStep_Title {
            get {
                return ResourceManager.GetString("EncryptionStep_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption failed.
        /// </summary>
        public static string Failed_Encryption {
            get {
                return ResourceManager.GetString("Failed_Encryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypted self-extractable package was generated.
        /// </summary>
        public static string Finish_Encrypted {
            get {
                return ResourceManager.GetString("Finish_Encrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public and private keys were saved to &apos;{0}&apos;.
        ///
        ///Would you like to open that location?.
        /// </summary>
        public static string Finish_KeysGenerated {
            get {
                return ResourceManager.GetString("Finish_KeysGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public and private keys will be generated and stored in separate files.
        /// </summary>
        public static string KeyGenerationStep_Description {
            get {
                return ResourceManager.GetString("KeyGenerationStep_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination:.
        /// </summary>
        public static string KeyGenerationStep_Destination {
            get {
                return ResourceManager.GetString("KeyGenerationStep_Destination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory already contains file(s) named &quot;public key.asc&quot; or &quot;private key.asc&quot;.
        ///
        ///Would you like to overwrite these files?.
        /// </summary>
        public static string KeyGenerationStep_DoYouWantOverwrite {
            get {
                return ResourceManager.GetString("KeyGenerationStep_DoYouWantOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No, select another directory.
        /// </summary>
        public static string KeyGenerationStep_NoSelectAnother {
            get {
                return ResourceManager.GetString("KeyGenerationStep_NoSelectAnother", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private key:.
        /// </summary>
        public static string KeyGenerationStep_PrivateKeyPath {
            get {
                return ResourceManager.GetString("KeyGenerationStep_PrivateKeyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public key:.
        /// </summary>
        public static string KeyGenerationStep_PublicKeyPath {
            get {
                return ResourceManager.GetString("KeyGenerationStep_PublicKeyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key generation.
        /// </summary>
        public static string KeyGenerationStep_Title {
            get {
                return ResourceManager.GetString("KeyGenerationStep_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run.
        /// </summary>
        public static string Run {
            get {
                return ResourceManager.GetString("Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory already contains file(s) named &quot;public key.asc&quot; or &quot;private key.asc&quot;.
        /// </summary>
        public static string Validation_AlreadyHasKey {
            get {
                return ResourceManager.GetString("Validation_AlreadyHasKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected path doesn&apos;t exist.
        /// </summary>
        public static string Validation_ExisingPath {
            get {
                return ResourceManager.GetString("Validation_ExisingPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided public key is invalid.
        /// </summary>
        public static string Validation_PublicKeyIsInvalid {
            get {
                return ResourceManager.GetString("Validation_PublicKeyIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required.
        /// </summary>
        public static string Validation_Required {
            get {
                return ResourceManager.GetString("Validation_Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string Validation_Success {
            get {
                return ResourceManager.GetString("Validation_Success", resourceCulture);
            }
        }
    }
}
